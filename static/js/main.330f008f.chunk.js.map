{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goodsList","goods","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetButtonActive","className","type","classNames","onClick","currentState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAqBzB,OAnBIH,GACFI,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKd,EAASiB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAKXd,GACFO,EAAaQ,UAGRR,EAOWS,CAAkBnB,EAAiB,CACnDG,aACAG,aAGIc,EAAuBd,IAAaP,EAASM,MAAQF,EAmB3D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaP,EAASe,WAEtCU,QA1Be,WACrBjB,EAAYR,EAASe,WAmBjB,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaP,EAASiB,SAEtCQ,QAjCa,WACnBjB,EAAYR,EAASiB,SA0BjB,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAxCQ,WACdpB,GAAc,SAAAqB,GAAY,OAAKA,MAiC3B,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAWE,IACT,mBACA,CAAE,WAAYjB,IAAaP,EAASM,OAEtCmB,QAhDI,WACZpB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAaJ,6BACGG,EAAUkB,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.330f008f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goodsList = getReorderedGoods(goodsFromServer, {\n    isReversed,\n    sortType,\n  });\n\n  const isResetButtonActive = (sortType !== SortType.NONE || isReversed);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(currentState => !currentState);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonActive && (\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-danger',\n              { 'is-light': sortType !== SortType.NONE },\n            )}\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsList.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}